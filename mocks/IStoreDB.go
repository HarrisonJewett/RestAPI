// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	time "time"

	mock "github.com/stretchr/testify/mock"

	types "github.com/REST-API-Test/types"
)

// IStoreDB is an autogenerated mock type for the IStoreDB type
type IStoreDB struct {
	mock.Mock
}

// GetBreakdown provides a mock function with given fields: _a0, _a1, _a2
func (_m *IStoreDB) GetBreakdown(_a0 time.Time, _a1 time.Time, _a2 string) ([]types.DateBucket, error) {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 []types.DateBucket
	if rf, ok := ret.Get(0).(func(time.Time, time.Time, string) []types.DateBucket); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]types.DateBucket)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(time.Time, time.Time, string) error); ok {
		r1 = rf(_a0, _a1, _a2)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCustomerOrders provides a mock function with given fields: _a0
func (_m *IStoreDB) GetCustomerOrders(_a0 string) ([]types.Order, error) {
	ret := _m.Called(_a0)

	var r0 []types.Order
	if rf, ok := ret.Get(0).(func(string) []types.Order); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]types.Order)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PlaceOrder provides a mock function with given fields: _a0, _a1
func (_m *IStoreDB) PlaceOrder(_a0 []types.Product, _a1 string) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func([]types.Product, string) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
